"question","answer"
"What is time complexity?","Time complexity is a computational concept that measures the amount of time an algorithm takes to run as a function of the length of the input. It expresses how the runtime of an algorithm grows as the input size increases."
"What does Big O notation represent?","Big O notation describes the upper bound or worst-case scenario of an algorithm's time complexity. It helps us understand how the runtime of an algorithm scales with input size by focusing on the dominant terms and ignoring constants and less significant terms."
"What is O(1) time complexity?","O(1) represents constant time complexity. It means the algorithm takes the same amount of time regardless of the input size. Examples include accessing an array element by index or checking if a stack is empty."
"What is O(log n) time complexity?","O(log n) represents logarithmic time complexity. It means the time increases logarithmically as input size grows. Common examples include binary search and operations on balanced binary search trees."
"What is O(n) time complexity?","O(n) represents linear time complexity. The runtime grows linearly with input size. Examples include traversing an array or linked list or finding the maximum value in an unsorted array."
"What is O(n log n) time complexity?","O(n log n) represents linearithmic time complexity. Common examples include efficient sorting algorithms like merge sort, heap sort, and quicksort (average case)."
"What is O(n²) time complexity?","O(n²) represents quadratic time complexity. The runtime grows proportional to the square of the input size. Examples include nested loops, bubble sort, insertion sort, and selection sort."
"What is O(2^n) time complexity?","O(2^n) represents exponential time complexity. The runtime doubles with each additional element in the input. Examples include recursive algorithms for the Fibonacci sequence or the Tower of Hanoi puzzle."
"What is O(n!) time complexity?","O(n!) represents factorial time complexity. The runtime grows with the factorial of the input size. Examples include generating all permutations of a list or the brute force solution to the traveling salesman problem."
"What is the time complexity of binary search?","Binary search has O(log n) time complexity because it halves the search space with each comparison, allowing it to find an element in a sorted array very efficiently."
"What is the time complexity of linear search?","Linear search has O(n) time complexity because in the worst case, it needs to check every element in the array or list to find the target element."
"What is the time complexity of bubble sort?","Bubble sort has O(n²) time complexity because it uses nested loops to compare and swap adjacent elements until the array is sorted."
"What is the time complexity of merge sort?","Merge sort has O(n log n) time complexity in all cases (best, average, worst) because it divides the array into halves recursively and then merges them in linear time."
"What is the time complexity of quicksort?","Quicksort has O(n log n) average time complexity, but O(n²) worst-case complexity when the pivot selection is poor. It works by selecting a pivot and partitioning elements around it."
"What is the time complexity of insertion sort?","Insertion sort has O(n²) worst and average case time complexity, but O(n) best case when the array is already sorted or nearly sorted."
"What is the time complexity of accessing an element in an array?","Accessing an element in an array by index has O(1) constant time complexity because it uses direct memory addressing."
"What is the time complexity of searching in a hash table?","Searching in a hash table has O(1) average case time complexity, but O(n) worst case when there are many collisions."
"What is the time complexity of breadth-first search (BFS)?","BFS has O(V + E) time complexity where V is the number of vertices and E is the number of edges in the graph."
"What is the time complexity of depth-first search (DFS)?","DFS has O(V + E) time complexity where V is the number of vertices and E is the number of edges in the graph."
"What is the time complexity of Dijkstra's algorithm?","Dijkstra's algorithm has O((V + E) log V) time complexity with a binary heap implementation, where V is the number of vertices and E is the number of edges."
"What factors affect time complexity?","Time complexity is affected by factors like input size, algorithm design, hardware limitations, implementation details, and the specific operations being performed."
"What is the difference between best case, average case, and worst case time complexity?","Best case describes the minimum time required for an algorithm on optimal input. Average case describes the expected time across all possible inputs. Worst case describes the maximum time on the most challenging input."
"What is space complexity?","Space complexity measures the amount of memory an algorithm uses relative to the input size. Like time complexity, it's often expressed using Big O notation."
"How do you analyze the time complexity of a recursive algorithm?","Recursive algorithm time complexity is often analyzed using recurrence relations that describe how the problem is divided and conquered, typically solved using methods like the Master Theorem."
"What is amortized time complexity?","Amortized time complexity analyzes the average performance of operations over a sequence of operations, even if some individual operations might be costly. It's useful for data structures like dynamic arrays."
"Can an algorithm have different time complexities for different operations?","Yes, data structures often have different time complexities for different operations. For example, an array has O(1) for access but O(n) for insertion at the beginning."
"What is the time complexity of binary tree traversal?","Binary tree traversal (inorder, preorder, postorder) has O(n) time complexity where n is the number of nodes because each node is visited exactly once."
"What is the time complexity of matrix multiplication using the standard algorithm?","Standard matrix multiplication has O(n³) time complexity for two n×n matrices, though more efficient algorithms like Strassen's algorithm exist."
"What is the time complexity of the dynamic programming solution to the knapsack problem?","The dynamic programming solution to the knapsack problem has O(nW) time complexity, where n is the number of items and W is the capacity of the knapsack."
"What is the time complexity of the Fibonacci sequence using recursion?","Computing the nth Fibonacci number using naive recursion has O(2^n) time complexity, but it can be improved to O(n) using dynamic programming or iteration."
"What's more efficient, O(n log n) or O(n²)?","O(n log n) is more efficient than O(n²), especially as input size increases. For large n, an O(n log n) algorithm will significantly outperform an O(n²) algorithm."
"What is the time complexity of heap operations?","Building a heap has O(n) time complexity. Insertion and deletion in a heap typically have O(log n) time complexity."
"When would an O(n²) algorithm be preferred over an O(n log n) algorithm?","An O(n²) algorithm might be preferred for very small datasets, when the algorithm is simpler to implement, or when the constant factors of the O(n log n) algorithm are significantly larger."
"What is the time complexity of adding an element to a linked list?","Adding an element at the beginning of a linked list has O(1) time complexity. Adding at the end has O(1) if you maintain a tail pointer, otherwise O(n)."
"What is the time complexity of adding an element to an array?","Adding an element at the end of a dynamic array is O(1) amortized time complexity. Inserting at an arbitrary position is O(n) because elements need to be shifted."
"What is the Master Theorem?","The Master Theorem is a formula for solving recurrence relations of the form T(n) = aT(n/b) + f(n), which commonly arise when analyzing divide-and-conquer algorithms."
"How does caching affect time complexity?","Caching can improve practical performance but typically doesn't change the theoretical time complexity. However, techniques like memoization can reduce time complexity in some recursive algorithms."
"What is the relationship between time complexity and algorithm efficiency?","Time complexity provides a theoretical measure of how algorithm runtime scales with input size. Lower time complexity generally indicates better efficiency, but practical efficiency can also depend on constant factors, memory usage, and hardware considerations."
"What is the time complexity of sorting algorithms in general?","Comparison-based sorting algorithms have a lower bound of Ω(n log n) time complexity. Non-comparison sorts like counting sort or radix sort can achieve O(n) under specific conditions."
"Why is constant time O(1) considered efficient?","Constant time O(1) is considered efficient because the operation takes the same amount of time regardless of input size, making it predictable and fast even for large datasets."
"How does parallelization affect time complexity?","Parallelization can improve practical runtime but doesn't typically change the theoretical time complexity. It can reduce the constant factors by distributing work across multiple processors."
"What's the difference between Big O, Big Omega, and Big Theta notations?","Big O (O) represents the upper bound, Big Omega (Ω) represents the lower bound, and Big Theta (Θ) represents both upper and lower bounds—indicating the exact order of growth."
"What is the time complexity of selection sort?","Selection sort has O(n²) time complexity because it uses nested loops to find the minimum element in the unsorted portion and place it at the end of the sorted portion."
"What is the time complexity of heap sort?","Heap sort has O(n log n) time complexity because it builds a heap in O(n) time and then extracts the maximum element n times, each taking O(log n) time."
"What is the time complexity of radix sort?","Radix sort has O(d(n+k)) time complexity, where n is the number of elements, k is the range of the input, and d is the number of digits in the largest number. It's a non-comparison sorting algorithm."
"What is the time complexity of counting sort?","Counting sort has O(n+k) time complexity, where n is the number of elements and k is the range of the input. It's efficient when the range of input values is small compared to the number of elements."
"What is the time complexity of Shell sort?","Shell sort has a time complexity between O(n log n) and O(n²), depending on the gap sequence used. It's an improved version of insertion sort that allows the exchange of items that are far apart."
"What is the time complexity of the Floyd-Warshall algorithm?","The Floyd-Warshall algorithm for finding shortest paths in a weighted graph has O(V³) time complexity, where V is the number of vertices in the graph."
"What is the time complexity of Prim's algorithm for Minimum Spanning Tree?","Prim's algorithm has O(E log V) time complexity with a binary heap implementation, where E is the number of edges and V is the number of vertices in the graph."
"What is the time complexity of Kruskal's algorithm for Minimum Spanning Tree?","Kruskal's algorithm has O(E log E) or O(E log V) time complexity, where E is the number of edges and V is the number of vertices in the graph. The dominant cost is sorting the edges."
"What is the time complexity of finding the longest common subsequence using dynamic programming?","Finding the longest common subsequence using dynamic programming has O(m×n) time complexity, where m and n are the lengths of the two sequences."
"What is the time complexity of the Boyer-Moore string matching algorithm?","Boyer-Moore string matching algorithm has O(n+m) average and best case time complexity, but O(n×m) worst case, where n is the text length and m is the pattern length."
"What is the time complexity of the Rabin-Karp string matching algorithm?","Rabin-Karp string matching algorithm has O(n+m) average and best case time complexity, but O(n×m) worst case, where n is the text length and m is the pattern length."
"What is the time complexity of the Knuth-Morris-Pratt (KMP) string matching algorithm?","KMP string matching algorithm has O(n+m) time complexity in all cases, where n is the text length and m is the pattern length, making it more efficient than naive string matching."
"What is the time complexity of operations on a Red-Black Tree?","Operations (search, insert, delete) on a Red-Black Tree have O(log n) time complexity because it's a self-balancing binary search tree with guaranteed logarithmic height."
"What is the time complexity of operations on a B-tree?","Operations (search, insert, delete) on a B-tree have O(log n) time complexity. B-trees are balanced search trees designed to work well with disk storage systems."
"What is the time complexity of operations on a trie (prefix tree)?","Operations on a trie (prefix tree) have O(m) time complexity, where m is the length of the key. Tries are efficient for string-related operations like prefix matching."
"What is the time complexity of the A* search algorithm?","A* search algorithm has a time complexity of O(b^d), where b is the branching factor and d is the depth of the goal node. However, with a good heuristic, it can be much more efficient than uninformed search algorithms."
"What is the time complexity of topological sort of a directed acyclic graph (DAG)?","Topological sort of a DAG has O(V+E) time complexity, where V is the number of vertices and E is the number of edges in the graph."
"What is the time complexity of the Bellman-Ford algorithm?","The Bellman-Ford algorithm for finding shortest paths in a weighted graph has O(V×E) time complexity, where V is the number of vertices and E is the number of edges. It can handle negative edge weights."
"What is the time complexity of finding bridges in a graph?","Finding bridges (edges whose removal increases the number of connected components) in a graph has O(V+E) time complexity using a variant of DFS, where V is the number of vertices and E is the number of edges."
"What is the time complexity of finding articulation points in a graph?","Finding articulation points (vertices whose removal increases the number of connected components) in a graph has O(V+E) time complexity using a variant of DFS, where V is the number of vertices and E is the number of edges."
"What is the time complexity of the Karatsuba algorithm for multiplication?","The Karatsuba algorithm for multiplication has O(n^log₂(3)) ≈ O(n^1.585) time complexity, which is faster than the standard multiplication algorithm's O(n²) for large numbers."
"What is the time complexity of the Strassen algorithm for matrix multiplication?","Strassen's algorithm for matrix multiplication has O(n^log₂(7)) ≈ O(n^2.81) time complexity, which is faster than the standard matrix multiplication algorithm's O(n³) for large matrices."
"What is the time complexity of the Fast Fourier Transform (FFT)?","The Fast Fourier Transform has O(n log n) time complexity, making it much faster than the discrete Fourier transform's O(n²) time complexity for large inputs."
"What is the time complexity of finding the maximum subarray sum using Kadane's algorithm?","Kadane's algorithm for finding the maximum subarray sum has O(n) time complexity, where n is the size of the array. It uses dynamic programming to solve the problem in a single pass."
"What is the time complexity of the Union-Find data structure with path compression and union by rank?","The Union-Find data structure with path compression and union by rank has nearly constant time complexity for both union and find operations, specifically O(α(n)) where α is the inverse Ackermann function that grows extremely slowly."
"What is the time complexity of the Euclidean algorithm for finding GCD?","The Euclidean algorithm for finding the greatest common divisor (GCD) has O(log min(a,b)) time complexity, where a and b are the two numbers."
"What is the time complexity of sieve of Eratosthenes for finding prime numbers?","The sieve of Eratosthenes algorithm for finding all prime numbers up to n has O(n log log n) time complexity, which is more efficient than checking each number individually."
"What is the time complexity of the Miller-Rabin primality test?","The Miller-Rabin primality test has O(k log³ n) time complexity, where n is the number being tested and k is the number of test rounds. It's a probabilistic algorithm for determining if a number is prime."
"What is the time complexity of finding the convex hull using Graham scan?","Graham scan algorithm for finding the convex hull has O(n log n) time complexity, where n is the number of points. The dominant cost is sorting the points."
"What is the time complexity of the Kosaraju algorithm for finding strongly connected components?","Kosaraju's algorithm for finding strongly connected components in a directed graph has O(V+E) time complexity, where V is the number of vertices and E is the number of edges."
"What is the time complexity of the Ford-Fulkerson algorithm for maximum flow?","The Ford-Fulkerson algorithm for maximum flow has O(E×|max_flow|) time complexity in the worst case, where E is the number of edges and |max_flow| is the value of the maximum flow."
"What is the time complexity of the Edmonds-Karp algorithm for maximum flow?","The Edmonds-Karp algorithm, a variant of Ford-Fulkerson using BFS, has O(V×E²) time complexity, where V is the number of vertices and E is the number of edges."
"What is the time complexity of the Dinic's algorithm for maximum flow?","Dinic's algorithm for maximum flow has O(V²×E) time complexity, where V is the number of vertices and E is the number of edges. It's faster than Edmonds-Karp for dense graphs."
"What is the time complexity of the Hungarian algorithm for the assignment problem?","The Hungarian algorithm for the assignment problem has O(n³) time complexity, where n is the number of workers/tasks."
"What is the time complexity of finding the lowest common ancestor (LCA) in a binary tree?","Finding the lowest common ancestor in a binary tree using the naive approach has O(n) time complexity, but with preprocessing, it can be done in O(1) time with O(n) space."
"What is the time complexity of the Z-algorithm for pattern matching?","The Z-algorithm for pattern matching has O(n+m) time complexity, where n is the text length and m is the pattern length."
"What is the time complexity of the Manacher's algorithm for finding the longest palindromic substring?","Manacher's algorithm for finding the longest palindromic substring has O(n) linear time complexity, where n is the length of the string."
"What is the time complexity of finding all bridges in a graph using Tarjan's algorithm?","Tarjan's algorithm for finding all bridges in a graph has O(V+E) time complexity, where V is the number of vertices and E is the number of edges."
"What is the time complexity of finding all articulation points in a graph using Tarjan's algorithm?","Tarjan's algorithm for finding all articulation points in a graph has O(V+E) time complexity, where V is the number of vertices and E is the number of edges."
"What is the time complexity of the Suffix Tree construction?","Suffix Tree construction using Ukkonen's algorithm has O(n) linear time complexity for constant-size alphabets, where n is the length of the string."
"What is the time complexity of range queries using a Segment Tree?","Range queries using a Segment Tree have O(log n) time complexity, and updates also take O(log n) time, where n is the size of the array."
"What is the time complexity of operations on a Fenwick Tree (Binary Indexed Tree)?","Operations (range sum query, update) on a Fenwick Tree have O(log n) time complexity, where n is the size of the array."
"What is the time complexity of the Johnson's algorithm for all-pairs shortest paths?","Johnson's algorithm for all-pairs shortest paths has O(V²log V + V×E) time complexity, where V is the number of vertices and E is the number of edges. It's faster than Floyd-Warshall for sparse graphs."
"What is the time complexity of the branch and bound algorithm for solving problems like Knapsack?","The branch and bound algorithm's time complexity is typically exponential in the worst case, but it uses various techniques to prune the search space and improve average-case performance."
"What is the time complexity of the Held-Karp algorithm for the Traveling Salesman Problem?","The Held-Karp algorithm for the Traveling Salesman Problem has O(n²×2^n) time complexity, where n is the number of cities. It uses dynamic programming to solve this NP-hard problem more efficiently than the naive approach."
"What is the time complexity of the Tarjan's algorithm for finding strongly connected components?","Tarjan's algorithm for finding strongly connected components in a directed graph has O(V+E) time complexity, where V is the number of vertices and E is the number of edges."
"What is the time complexity of finding the maximum bipartite matching using the Hopcroft-Karp algorithm?","The Hopcroft-Karp algorithm for maximum bipartite matching has O(E√V) time complexity, where E is the number of edges and V is the number of vertices. It's more efficient than the Ford-Fulkerson algorithm for this problem."
"What is the time complexity of the LZW compression algorithm?","The LZW compression algorithm has O(n) time complexity, where n is the size of the input data. It's a dictionary-based lossless compression algorithm."
"What is the time complexity of finding the minimum spanning tree using Boruvka's algorithm?","Boruvka's algorithm for finding the minimum spanning tree has O(E log V) time complexity, where E is the number of edges and V is the number of vertices in the graph."
"What is the time complexity of calculating the Levenshtein distance (edit distance) using dynamic programming?","Calculating the Levenshtein distance (edit distance) between two strings using dynamic programming has O(m×n) time complexity, where m and n are the lengths of the two strings."
